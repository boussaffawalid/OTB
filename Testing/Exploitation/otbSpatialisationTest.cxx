/*=========================================================================

  Program:   ORFEO Toolbox
  Language:  C++
  Date:      $Date$
  Version:   $Revision$


  Copyright (c) Centre National d'Etudes Spatiales. All rights reserved.
  See OTBCopyright.txt for details.


  This software is distributed WITHOUT ANY WARRANTY; without even
  the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
  PURPOSE.  See the above copyright notices for more information.

=========================================================================*/
#include "otbVectorData.h"
#include "otbVectorDataFileReader.h"
#include "otbVectorDataToLabelMapWithAttributesFilter.h"
#include "otbAttributesMapLabelObject.h"
#include "otbVectorDataProperties.h"
#include "itkLabelMapToLabelImageFilter.h"
#include "itkLabelMapToBinaryImageFilter.h"
#include "otbImage.h"
#include "otbImageFileWriter.h"
#include "otbSpatialisationFilter.h"

int otbSpatialisationTest(int argc, char * argv[])
{
  const char * infilename  = argv[1];
  const char * outfilename = argv[2];

  typedef unsigned short LabelType;
  const unsigned int Dimension = 2;
  typedef otb::Image<LabelType, Dimension>                                    LabeledImageType;
  typedef otb::ImageFileWriter<LabeledImageType>                              WriterType;
  typedef otb::VectorData<double, Dimension>                                  VectorDataType;
  typedef otb::AttributesMapLabelObject<LabelType, Dimension, std::string>         LabelObjectType;
  typedef itk::LabelMap<LabelObjectType>                                      LabelMapType;
  typedef otb::VectorDataFileReader<VectorDataType>                           VectorDataFileReaderType;
  typedef otb::SpatialisationFilter<VectorDataType,LabelMapType,LabeledImageType> FilterType;

  
  /** Instantiation of pointer objects*/
  VectorDataFileReaderType::Pointer reader = VectorDataFileReaderType::New();
  WriterType::Pointer writer = WriterType::New();
  FilterType::Pointer filter = FilterType::New();

  reader->SetFileName(infilename);
  reader->Update();

  filter->SetInputVectorData(reader->GetOutput());
  filter->UpdateData();
  
    //Write the result to an image file
  writer->SetFileName(outfilename);
  writer->SetInput(filter->GetOutputImage());
  writer->Update();
  
  std::cout<<"nb labels : "<<filter->GetOutputLabelMap()->GetNumberOfLabelObjects()<<std::endl;
  filter->GetOutputLabelMap()->PrintLabelObjects();



  return EXIT_SUCCESS;
}
