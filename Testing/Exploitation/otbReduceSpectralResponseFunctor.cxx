/*=========================================================================

  Program:   ORFEO Toolbox
  Language:  C++
  Date:      $Date$
  Version:   $Revision$


  Copyright (c) Centre National d'Etudes Spatiales. All rights reserved.
  See OTBCopyright.txt for details.


  This software is distributed WITHOUT ANY WARRANTY; without even
  the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
  PURPOSE.  See the above copyright notices for more information.

=========================================================================*/
#include "itkExceptionObject.h"
#include "otbMacro.h"

#include "otbSpectralResponse.h"
#include "otbSatelliteRSR.h"
#include "otbReduceSpectralResponseFunctor.h"

int main(int argc, char * argv[])
{
  if ( argc!=5 )
  {
    std::cout << argv[0] << std::endl << "\t" << "<Spectral_response_filename>"<< "\t" << "<RSR_filename>"<< "\t" << "<Nb total band>"<< "\t" << "<band>"<< std::endl ;
    return EXIT_FAILURE;
  }
  
  typedef otb::SpectralResponse< double,double>  ResponseType;
  typedef ResponseType::Pointer  ResponsePointerType;
  
  typedef otb::SatelliteRSR< double,double>  SatRSRType;
  typedef SatRSRType::Pointer  SatRSRPointerType;
  
  typedef otb::ReduceSpectralResponseFunctor < ResponseType,SatRSRType>  ReduceResponseType;
  typedef ReduceResponseType::Pointer  ReduceResponseTypePointerType;
  
  const std::string spectreFile(argv[1]);
  const std::string RSRfile(argv[2]);
  unsigned int nbBand = atoi(argv[3]);
  unsigned int numBand = atoi(argv[4]);
  
  //Instantiation
  ResponsePointerType  mySpectralResponse=ResponseType::New();
  mySpectralResponse->Load(spectreFile);
  
  SatRSRPointerType  myRSR=SatRSRType::New();
  myRSR->SetNbBands(nbBand);
  myRSR->Load(RSRfile);
  
  ReduceResponseTypePointerType  myReduceResponse=ReduceResponseType::New();
  //Instantiation
  //ResponsePointerType  myResponse=ResponseType::New();
  
  myReduceResponse->SetInputSatRSR(myRSR);
  myReduceResponse->SetInputSpectralResponse(mySpectralResponse);
  //Load file into vector
  
  //itk::Indent ind;
  
  //myResponse->PrintSelf(std::cout, ind);
  std::cout << "ReduceSpatialResponse(" << numBand <<")= " << (*myReduceResponse)(numBand) << std::endl;
  return EXIT_SUCCESS;
}
