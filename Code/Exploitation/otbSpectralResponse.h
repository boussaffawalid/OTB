/*=========================================================================

  Program:   ORFEO Toolbox
  Language:  C++
  Date:      $Date$
  Version:   $Revision$


  Copyright (c) Centre National d'Etudes Spatiales. All rights reserved.
  See OTBCopyright.txt for details.


     This software is distributed WITHOUT ANY WARRANTY; without even
     the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
     PURPOSE.  See the above copyright notices for more information.

=========================================================================*/
#ifndef __otbSpectralResponse_h
#define __otbSpectralResponse_h


#include "itkDataObject.h"
#include <itkObjectFactory.h>
#include <vector>
#include <utility>
#include <fstream>
#include <limits>

namespace otb
{
/** \class SpectralResponse
   * \brief this class represents a hierarchy of vector data.
   *
   * This class contains an itk::TreeContainer templated with otb::DataNode.
   * It represents a tree structure of vector data. These data can be read from
   * shapefiles or kml files for instance.
   *
   * The internal tree can be walked with itk::TreeIteratorBase subclasses.
   *
   * The three templates indicate
   * - the precision of the points coordinates (by default: double)
   * - the number of dimensions of the space (by default: 2)
   * - the precision of the value associated with objects such as line or
   * polygons (by default: double)
   *
   * The elements in the SpectralResponse have their coordinates in the projection
   * specified by the Wkt string. This class also offer the possibility to store
   * the coordinates directly into an image coordinate system, using the origin and
   * spacing in a similar way as the corresponding image.
   *
   * \sa DataNode
   * \sa SpectralResponseFileReader
   * \sa SpectralResponseFileWriter
   *
 */
template <class TPrecision = double, class TValuePrecision = double>
      class SpectralResponse
  : public itk::DataObject
      {
        public:
          /** Standard class typedefs */
          typedef SpectralResponse Self;
          typedef itk::DataObject Superclass;
          typedef itk::SmartPointer<Self> Pointer;
          typedef itk::SmartPointer<const Self> ConstPointer;



          /** Standard macros */
          itkNewMacro(Self);
          itkTypeMacro(SpectralResponse,DataObject);
          

          /** Template parameters typedef */
          typedef TPrecision PrecisionType;
          typedef TValuePrecision ValuePrecisionType;
          
          typedef std::pair<TPrecision,TValuePrecision> Pair;
          typedef std::vector<Pair *> VectorPairType;
          
          
          //itkGetConstReferenceMacro(Response, VectorType);


          /** Clear the vector data  */
          virtual bool Clear();

          /** Return the number of element in the tree */
          virtual int Size() const;

          /** Fill from a ASCII file (USGS now)*/
          void Load( const std::string & filename );

        protected:
          /** Constructor */
          SpectralResponse();
          /** Constructor from a ASCII file */
          //SpectralResponse( const std::string & filename );
          /** Destructor */
          virtual ~SpectralResponse() {};
          /** PrintSelf method */
          void PrintSelf(std::ostream& os, itk::Indent indent) const;

        private:
          SpectralResponse(const Self&); //purposely not implemented
          void operator=(const Self&); //purposely not implemented

          

          /** Spectral response (x=lambda; y=response)*/
          VectorPairType    m_Response;
      };
}// end namespace otb


#ifndef OTB_MANUAL_INSTANTIATION
#include "otbSpectralResponse.txx"
#endif

#endif

