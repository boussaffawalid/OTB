/*=========================================================================

  Program:   ORFEO Toolbox
  Language:  C++
  Date:      $Date$
  Version:   $Revision$


  Copyright (c) Centre National d'Etudes Spatiales. All rights reserved.
  See OTBCopyright.txt for details.


     This software is distributed WITHOUT ANY WARRANTY; without even
     the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
     PURPOSE.  See the above copyright notices for more information.

=========================================================================*/
#ifndef __otbSpatialisationFilter_txx
#define __otbSpatialisationFilter_txx

#include "itkNumericTraits.h"

#include "otbVectorDataProperties.h"
#include "otbSpatialisationFilter.h"

namespace otb
{

template <class TVectorData, class TLabelMap, class TOutputImage>
SpatialisationFilter<TVectorData, TLabelMap, TOutputImage>
::SpatialisationFilter()
{

  //instanciate filters
  m_VectorDataProperties = VectorDataPropertiesType::New();
  m_VectorDataToLabelMapFilter = VectorDataToLabelMapFilterType::New();
  m_LabelMapToLabelImageFilter = LabelMapToLabelImageFilterType::New();

}


template <class TVectorData, class TLabelMap, class TOutputImage>
void
SpatialisationFilter<TVectorData, TLabelMap, TOutputImage>
::UpdateData()
{
   std::cout<<"Generate data"<<std::endl;
//    OutputLabelMapPointer OutputLabelMap = this->GetOutputLabelMap();
   OutputImagePointer OutputImage = this->GetOutputImage();
   
   //VectorDataProperties is needed to compute the ROI of the vectorData
   //set the input vectordata to the vectordataproperties
   RegionType region;
   typename OutputLabelMapType::PointType origin;
   m_VectorDataProperties->SetVectorDataObject(m_InputVectorData);
   m_VectorDataProperties->SetBoundingRegion(region);
   //Compute the global bounding box of the vectordata
   m_VectorDataProperties->ComputeBoundingRegion();
   origin[0] = m_VectorDataProperties->GetBoundingRegion().GetImageRegion().GetIndex(0);
   origin[1] = m_VectorDataProperties->GetBoundingRegion().GetImageRegion().GetIndex(1);

   //Set size,origin and spacing of the output labelmap
   m_VectorDataToLabelMapFilter->SetInput(m_InputVectorData);
   m_VectorDataToLabelMapFilter->SetSize(m_VectorDataProperties->GetBoundingRegion().GetImageRegion().GetSize());
   m_VectorDataToLabelMapFilter->SetOrigin(origin);
   m_VectorDataToLabelMapFilter->SetSpacing(m_InputVectorData->GetSpacing());
   
   m_LabelMapToLabelImageFilter->SetInput(m_VectorDataToLabelMapFilter->GetOutput());
   


}


template <class TVectorData, class TLabelMap, class TOutputImage>
void
SpatialisationFilter<TVectorData, TLabelMap, TOutputImage>
::PrintSelf(std::ostream& os, itk::Indent indent) const
{
  Superclass::PrintSelf(os, indent);
}

} // end namespace otb

#endif

