/*=========================================================================

  Program:   ORFEO Toolbox
  Language:  C++
  Date:      $Date$
  Version:   $Revision$


  Copyright (c) Centre National d'Etudes Spatiales. All rights reserved.
  See OTBCopyright.txt for details.


     This software is distributed WITHOUT ANY WARRANTY; without even
     the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
     PURPOSE.  See the above copyright notices for more information.

=========================================================================*/

#ifndef __otbLabelMapToSimulatedImageFilter_h
#define __otbLabelMapToSimulatedImageFilter_h


#include "itkLabelMapFilter.h"
// #include "otbLabelObjectToProsailParameters"
#include "otbProspectModel.h"
#include "otbSailModel.h"
#include "otbReduceSpectralResponse.h"
#include "otbGaussianAdditiveNoiseSampleListFilter.h"
#include "otbSpectralResponse.h"
#include "otbSatelliteRSR.h"
#include "otbLeafParameters.h"
#include "itkListSample.h"
#include "otbGaussianAdditiveNoiseSampleListFilter.h"

namespace otb
{

/**
 * \class LabelMapToSimulatedImageFilter
 * \brief Transform a labelMap into a Image
 *
 * LabelMapToSimulatedImageFilter convert a label map into a image.
 * Reflectance of the image are computed by applying the RSR of the satellite to the spectrum obtained
 * by the spectrum simulator.
 * 
 *
 * \sa ProcessObject
 */

template <class TInputLabelMap, class TOutputImage>
class ITK_EXPORT LabelMapToSimulatedImageFilter :
  public itk::LabelMapFilter <TInputLabelMap, TOutputImage>

{
public:
   /**
   * Standard "Self" & Superclass typedef.
   */
   typedef LabelMapToSimulatedImageFilter                       Self;
   typedef itk::LabelMapFilter <TInputLabelMap, TOutputImage>   Superclass;
   typedef itk::SmartPointer<Self>                              Pointer;
   typedef itk::SmartPointer<const Self>                        ConstPointer;

   /** Some convenient typedefs. */
   typedef TInputLabelMap                              InputLabelMapType;
   typedef typename InputLabelMapType::Pointer         InputLabelMapPointer;
   typedef typename InputLabelMapType::ConstPointer    InputLabelMapConstPointer;
   typedef typename InputLabelMapType::LabelObjectType LabelObjectType;

   typedef TOutputImage                              OutputImageType;
   typedef typename OutputImageType::ConstPointer    OutputImageConstPointer;
   typedef typename OutputImageType::Pointer         OutputImagePointer;
   typedef typename OutputImageType::IndexType       IndexType;
   typedef typename OutputImageType::InternalPixelType InternalPixelType;

//    typedef LabelObjectToProsailParameters            LabelObjectToParameters;
   typedef ProspectModel                             ProspectModelType;
   typedef SailModel                                 SailModelType;
   typedef SpectralResponse<double,double>           SpectralResponseType;
   typedef SatelliteRSR<double,double>               SatelliteRSRType;
   typedef ReduceSpectralResponse<SpectralResponseType,SatelliteRSRType> ReduceSpectralResponseType;
   typedef LeafParameters                            LeafParametersType;
   
   typedef itk::Statistics::MersenneTwisterRandomVariateGenerator RandomGeneratorType;

   
   /** Standard Macro*/
   itkTypeMacro(LabelMapToSimulatedImageFilter, LabelMapFilter);
   itkNewMacro(Self);

   itkSetMacro(NumberOfComponentsPerPixel, unsigned int);
   itkGetMacro(NumberOfComponentsPerPixel, unsigned int);
   
   itkSetMacro(SatRSRFilename, std::string);
   itkGetMacro(SatRSRFilename, std::string);

   itkSetMacro(PathRoot, std::string);
   itkGetMacro(PathRoot, std::string);
   
   
protected:
   LabelMapToSimulatedImageFilter();
   virtual ~LabelMapToSimulatedImageFilter() {}
   void PrintSelf(std::ostream& os, itk::Indent indent) const;

   virtual void BeforeThreadedGenerateData();
   virtual void ThreadedProcessLabelObject( LabelObjectType * labelObject );
   virtual void GenerateOutputInformation();


private:
   LabelMapToSimulatedImageFilter(const Self &); //purposely not implemented
   void operator =(const Self&); //purposely not implemented
   
   unsigned int m_NumberOfComponentsPerPixel;
   std::string m_SatRSRFilename;
   std::string m_PathRoot;
   double m_Mean;
   double m_Variance;


};

} // end namespace itk

#ifndef OTB_MANUAL_INSTANTIATION
#include "otbLabelMapToSimulatedImageFilter.txx"
#endif

#endif
