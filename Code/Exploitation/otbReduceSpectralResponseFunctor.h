/*=========================================================================

  Program:   ORFEO Toolbox
  Language:  C++
  Date:      $Date$
  Version:   $Revision$


  Copyright (c) Centre National d'Etudes Spatiales. All rights reserved.
  See OTBCopyright.txt for details.


     This software is distributed WITHOUT ANY WARRANTY; without even
     the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
     PURPOSE.  See the above copyright notices for more information.

=========================================================================*/
#ifndef __otbReduceSpectralResponse_h
#define __otbReduceSpectralResponse_h


#include "itkDataObject.h"
#include <itkObjectFactory.h>
#include <vector>
#include <utility>
#include <fstream>
#include <limits>

namespace otb
{
/** \class ReduceSpectralResponse
   * \brief this class represents a hierarchy of vector data.
   *
   * This class contains an itk::TreeContainer templated with otb::DataNode.
   * It represents a tree structure of vector data. These data can be read from
   * shapefiles or kml files for instance.
   *
   * The internal tree can be walked with itk::TreeIteratorBase subclasses.
   *
   * The three templates indicate
   * - the precision of the points coordinates (by default: double)
   * - the number of dimensions of the space (by default: 2)
   * - the precision of the value associated with objects such as line or
   * polygons (by default: double)
   *
   * The elements in the ReduceSpectralResponse have their coordinates in the projection
   * specified by the Wkt string. This class also offer the possibility to store
   * the coordinates directly into an image coordinate system, using the origin and
   * spacing in a similar way as the corresponding image.
   *
   * \sa DataNode
   * \sa ReduceSpectralResponseFileReader
   * \sa ReduceSpectralResponseFileWriter
   *
 */
template <class TSpectralResponse ,class TRSR>
      class ReduceSpectralResponseFunctor
  : public itk::DataObject
      {
        //friend class 
        public:
          /** Standard class typedefs */
          typedef ReduceSpectralResponseFunctor Self;
          typedef itk::DataObject Superclass;
          typedef itk::SmartPointer<Self> Pointer;
          typedef itk::SmartPointer<const Self> ConstPointer;

          /** Template parameters typedef */
          typedef TSpectralResponse InputSpectralResponseType;
          typedef TRSR InputRSRType;
          
          //typedef std::pair<TPrecision,TValuePrecision> PairType;
          typedef typename InputRSRType::Pointer InputRSRPointerType;
          typedef typename InputSpectralResponseType::Pointer InputSpectralResponsePointerType;
          
          typedef typename InputRSRType::PrecisionType PrecisionType;
          typedef typename InputRSRType::ValuePrecisionType ValuePrecisionType;
          
          typedef typename InputSpectralResponseType::VectorPairType VectorPairType;
    
          /** Standard macros */
          itkNewMacro(Self);
          itkTypeMacro(ReduceSpectralResponseFunctor,DataObject);
          
          itkGetConstObjectMacro(InputSatRSR, InputRSRType);
          itkSetObjectMacro(InputSatRSR, InputRSRType);
          
          itkGetConstObjectMacro(InputSpectralResponse, InputSpectralResponseType);
          itkSetObjectMacro(InputSpectralResponse, InputSpectralResponseType);
          
          //itkGetConstReferenceMacro(Response, VectorType);


          /** Clear the vector data  */
          virtual bool Clear();

          

          
          /** PrintSelf method */
          void PrintSelf(std::ostream& os, itk::Indent indent) const;
          
          
          
          /**
           * \param PrecisionType 
           * \return The integrate value of the RSR for the input spectre.
           */
          inline ValuePrecisionType operator()(const unsigned int numBand);
          
        protected:
          /** Constructor */
          ReduceSpectralResponseFunctor();
          /** Constructor from a ASCII file */
          //ReduceSpectralResponse( const std::string & filename );
          /** Destructor */
          virtual ~ReduceSpectralResponseFunctor() {};
          /** PrintSelf method */
          //void PrintSelf(std::ostream& os, itk::Indent indent) const;

        private:
          ReduceSpectralResponseFunctor(const Self&); //purposely not implemented
          void operator=(const Self&); //purposely not implemented

          InputRSRPointerType  m_InputSatRSR;
          InputSpectralResponsePointerType  m_InputSpectralResponse;
      };
}// end namespace otb


#ifndef OTB_MANUAL_INSTANTIATION
#include "otbReduceSpectralResponseFunctor.txx"
#endif

#endif

