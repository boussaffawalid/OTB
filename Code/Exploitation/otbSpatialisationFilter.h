/*=========================================================================

  Program:   ORFEO Toolbox
  Language:  C++
  Date:      $Date$
  Version:   $Revision$


  Copyright (c) Centre National d'Etudes Spatiales. All rights reserved.
  See OTBCopyright.txt for details.


     This software is distributed WITHOUT ANY WARRANTY; without even
     the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
     PURPOSE.  See the above copyright notices for more information.

=========================================================================*/

#ifndef __otbSpatialisationFilter_h
#define __otbSpatialisationFilter_h

#include "itkLabelObject.h"


#include "otbVectorDataToLabelMapWithAttributesFilter.h"
#include "otbAttributesMapLabelObject.h"
#include "otbVectorDataProperties.h"
#include "itkLabelMapToLabelImageFilter.h"

#include "itkProcessObject.h"
#include "otbVectorData.h"
#include "otbImageFileReader.h"
#include "otbImageFileWriter.h"


namespace otb
{

/**
 * \class SpatialisationFilter
 * \brief Convert a vector data into a label map and a label image
 *
 * SpatialisationFilter convert a vector data in a LabelMap and a label image
 * Each distinct object is assigned a unique label.
 * The final object labels start with 1 and are consecutive (depraced +10).
 *
 * \sa ImageSource
 */

template <class TVectorData, class TLabelMap, class TOutputImage>
class ITK_EXPORT SpatialisationFilter :
  public itk::ProcessObject

{
public:
   /**
   * Standard "Self" & Superclass typedef.
   */
   typedef SpatialisationFilter Self;
   typedef itk::ProcessObject            Superclass;
   typedef itk::SmartPointer<Self>       Pointer;
   typedef itk::SmartPointer<const Self> ConstPointer;

   /** Some convenient typedefs. */
   typedef TVectorData                                InputVectorDataType;
   typedef TLabelMap                                  OutputLabelMapType;
   typedef TOutputImage                               OutputImageType;
   typedef typename InputVectorDataType::Pointer      InputVectorDataPointer;
   typedef typename InputVectorDataType::ConstPointer InputVectorDataConstPointer;

   typedef typename OutputLabelMapType::Pointer      OutputLabelMapPointer;
   typedef typename OutputLabelMapType::ConstPointer OutputLabelMapConstPointer;
   typedef typename OutputImageType::ConstPointer    OutputImageConstPointer;
   typedef typename OutputImageType::Pointer         OutputImagePointer;


   typedef typename InputVectorDataType::DataNodeType::PolygonType::RegionType   RegionType;

   typedef VectorDataToLabelMapWithAttributesFilter<InputVectorDataType, OutputLabelMapType>   VectorDataToLabelMapFilterType;
   typedef VectorDataProperties<InputVectorDataType>                                           VectorDataPropertiesType;
   typedef itk::LabelMapToLabelImageFilter<OutputLabelMapType, OutputImageType>                LabelMapToLabelImageFilterType;

   
   /** Number of dimensions. */
   itkStaticConstMacro(VectorDataDimension, unsigned int, TVectorData::Dimension);

   /** Standard Macro*/
   itkTypeMacro(SpatialisationFilter, ProcessObject);
   itkNewMacro(Self);

   /**Set input vector data*/
   itkSetObjectMacro(InputVectorData, InputVectorDataType);
   itkGetConstObjectMacro(InputVectorData, InputVectorDataType);

   /** Get outputs */
   OutputLabelMapType * GetOutputLabelMap()
   {
      return m_VectorDataToLabelMapFilter->GetOutput();
   }
   
   OutputImageType * GetOutputImage()
   {
      return m_LabelMapToLabelImageFilter->GetOutput();
   }

   virtual void UpdateData();
   
   
protected:
   SpatialisationFilter();
   virtual ~SpatialisationFilter() {}
   void PrintSelf(std::ostream& os, itk::Indent indent) const;

//   virtual void GenerateOutputInformation();

private:
   SpatialisationFilter(const Self &); //purposely not implemented
   void operator =(const Self&); //purposely not implemented

  
   typename InputVectorDataType::Pointer m_InputVectorData;
  
   typename VectorDataPropertiesType::Pointer m_VectorDataProperties;
   typename VectorDataToLabelMapFilterType::Pointer m_VectorDataToLabelMapFilter;
   typename LabelMapToLabelImageFilterType::Pointer m_LabelMapToLabelImageFilter;

};

} // end namespace itk

#ifndef OTB_MANUAL_INSTANTIATION
#include "otbSpatialisationFilter.txx"
#endif

#endif
