/*=========================================================================

  Program:   ORFEO Toolbox
  Language:  C++
  Date:      $Date$
  Version:   $Revision$


  Copyright (c) Centre National d'Etudes Spatiales. All rights reserved.
  See OTBCopyright.txt for details.


     This software is distributed WITHOUT ANY WARRANTY; without even
     the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
     PURPOSE.  See the above copyright notices for more information.

=========================================================================*/
#ifndef __otbAtmosphericCorrectionsReduceSpectralResponse_h
#define __otbAtmosphericCorrectionsReduceSpectralResponse_h

#include "otbAtmosphericCorrectionParameters.h"

#include "otbReduceSpectralResponse.h"
//#include "otbSurfaceReflectanceToReflectanceFilter.h"

namespace otb
{
/** \class AtmosphericCorrectionsReduceSpectralResponse
   * \brief this class represents the spectral response of an object (or a satellite band).
   *
   * This class contains a std::vector of std::pair values
   * The first argument of the pair is a wavelenght lambda (in micro meters)
   * The first argument of the pair is the reflectance response associated to lambda 
   *
   * The two templates indicate
   * - the precision of the wavelenght (X) (by default: double)
   * - the precision of the reflectance associated to the wavelenght (Y) (by default: double)
   *
   * This Spectral response can be loaded from ASCII file (JPL spectral library Version 1.2) 
   * http://speclib.jpl.nasa.gov
   * \sa itk::DataObject
 */
template <class TSpectralResponse ,class TRSR>
class AtmosphericCorrectionsReduceSpectralResponse
  : public ReduceSpectralResponse <TSpectralResponse ,TRSR>
      {
        public:
          /** Standard class typedefs */
          typedef AtmosphericCorrectionsReduceSpectralResponse Self;
          typedef ReduceSpectralResponse <TSpectralResponse ,TRSR> Superclass;
          typedef itk::SmartPointer<Self> Pointer;
          typedef itk::SmartPointer<const Self> ConstPointer;
          
          /** 6S typedefs*/
          typedef otb::AtmosphericCorrectionParameters AtmosphericCorrectionParametersType;
          typedef itk::SmartPointer<AtmosphericCorrectionParametersType> AtmosphericCorrectionParametersPointerType;
          /** Standard macros */
          itkNewMacro(Self);
          itkTypeMacro(AtmosphericCorrectionsReduceSpectralResponse,ReduceSpectralResponse);
          
          itkGetConstObjectMacro(DataAtmosphericCorrectionParameters, AtmosphericCorrectionParametersType);
          itkSetObjectMacro(DataAtmosphericCorrectionParameters, AtmosphericCorrectionParametersType);
        
//           void  LoadFilterFunctionAtmosphericCorrectionParameters( double step = 0.0025);
          void  Process6S(/*const unsigned int numBand*/);
          
        protected:
          /** Constructor */
          AtmosphericCorrectionsReduceSpectralResponse();
          /** Constructor from a ASCII file */
          //AtmosphericCorrectionsReduceSpectralResponse( const std::string & filename );
          /** Destructor */
          virtual ~AtmosphericCorrectionsReduceSpectralResponse() {};
          /** PrintSelf method */
          //void PrintSelf(std::ostream& os, itk::Indent indent) const;
          
          AtmosphericCorrectionParametersPointerType m_DataAtmosphericCorrectionParameters;
          
        private:
          AtmosphericCorrectionsReduceSpectralResponse(const Self&); //purposely not implemented
          void operator=(const Self&); //purposely not implemented
          
          
          
      };
}// end namespace otb


#ifndef OTB_MANUAL_INSTANTIATION
#include "otbAtmosphericCorrectionsReduceSpectralResponse.txx"
#endif

#endif
