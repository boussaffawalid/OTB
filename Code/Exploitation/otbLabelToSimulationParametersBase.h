/*=========================================================================

  Program:   ORFEO Toolbox
  Language:  C++
  Date:      $Date$
  Version:   $Revision$


  Copyright (c) Centre National d'Etudes Spatiales. All rights reserved.
  See OTBCopyright.txt for details.


     This software is distributed WITHOUT ANY WARRANTY; without even
     the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
     PURPOSE.  See the above copyright notices for more information.

=========================================================================*/

#ifndef __otbLabelToSimulationParametersBase_h
#define __otbLabelToSimulationParametersBase_h


#include "itkProcessObject.h"


namespace otb
{

/**
 * \class LabelToSimulationParametersBase
 * \brief base class for all classes that take a label and outputs a set of parameters
 *
 * \sa ProcessObject
 */

template <class TLabel>
class ITK_EXPORT LabelToSimulationParametersBase : public itk::ProcessObject
{
public:

   /**Standard "Self" & Superclass typedef*/
   typedef LabelToSimulationParametersBase     Self;
   typedef itk::ProcessObject                  Superclass;
   typedef itk::SmartPointer<Self>             Pointer;
   typedef itk::SmartPointer<const Self>       ConstPointer;

   /** Some convenient typedefs. */
   typedef TLabel                                LabelType;
   typedef double                                ParametersValueType;
   typedef itk::Array<ParametersValueType>       ParametersType;
   
   
   /** Standard Macro*/
   itkTypeMacro(LabelToSimulationParametersBase, ProcessObject);

   itkSetMacro(Label, LabelType);
   virtual const ParametersType & GetStep1Parameters() = 0;
   virtual const ParametersType & GetStep2Parameters() = 0;
   
protected:
   LabelToSimulationParametersBase(){};
   virtual ~LabelToSimulationParametersBase() {}
   
   ParametersType m_Step1Parameters;
   ParametersType m_Step2Parameters;
   LabelType m_Label;

private:
   LabelToSimulationParametersBase(const Self &); //purposely not implemented
   void operator =(const Self&); //purposely not implemented
   
   

};

} // end namespace otb

#ifndef OTB_MANUAL_INSTANTIATION
#endif

#endif
